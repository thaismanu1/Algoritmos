#include <iostream>
#include <iomanip>
using namespace std;
// Estrutura para cada posicao da tabela hash
struct dado
{
    int k; //chave
    int status; //0:vazio, 1:ocupado, 2: removido
};
// Funcao hash auxiliar
int hash_aux(int k, int m)
{
    int h;
    h = k % m;
    if(h < 0)
        h += m;
    return h;
}
// Sondagem quadratica
int hash2(int k, int i, int m, int c1, int c2)
{
    return(hash_aux(k, m) + (c1 * i) + (c2 * i * i)) % m;
}
// insere elementos na tabela hash
int hash_insert(dado t[], int m, int k)
{
    int i, j;
    i = 0;
    do
    {
        j = hash2(k, i, m, 1, 3);
        if (t[j].status != 1)
        {
            t[j].k = k;
            t[j].status = 1;
            return j;
        }
        else
            i = i + 1;
    }
    while (i != m);
    return -1;
}
int main()
{
    int n; // numero de alunos a serem cadastrados
    int m; // tamanho da tabela hash
    dado t[20]; // tabela hash
    int k; // chave a ser inserida (numero de matricula)
    int i; // contador
    // Lendo numero de alunos e tamanho da tabela
    cin >> n >> m;
    
    // Inicializando a tabela hash
    for(i = 0; i < m; i++)
    {
        t[i].k = -1;
        t[i].status = 0;
    }
    // Lendo os dados de cada aluno e armazenando na tabela
    for(i = 0; i < n; i++)
    {
        cin >> k;
        hash_insert(t, m, k);
    }
    
    // Mostrando a tabela
    for(i = 0; i < m; i++)
        cout << t[i].k << " ";
    cout << endl;
    return 0;
}
