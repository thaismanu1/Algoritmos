#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstring>

using namespace std; 

struct dado
{
    char info[50]; // informacao 
    int k; // chave 
    int status; // 0: vazio, 1:ocupado, 2:removido
}; 

int h1(int k, int m) 
{ 
    int res; //k mod m 
    res = k % m; 
    if (res < 0) 
        res += m; 
    return res; 
} 

int h2(int k, int m) 
{
    return 1 + (k % (m - 1)); 
} 

int dhash(int k, int i, int m) 
{ 
    int res; 
    res = h1(k, m) + i * h2(k, m) % m;
    if (res < 0) 
        res += m; 
    if (res >= m) 
        res -= m; 
    return res; 
} 

int hash_insert(dado t[], int m, int k) 
{ 
    int i = 0; 
    int j = 0; 
    do
    { 
        j = dhash(k, i, m); 
        if (t[j].status != 1) 
        { 
            t[j].k = k; 
            t[j].status = 1;
            return j;
        }
        else i++; 
    } while (i != m); 
    return -1; 
} 

// procura o elemento desejado
int hash_search(dado t[], int m, int k)
{ 
    int i = 0; 
    int j = 0; 
    do 
    { 
        j = dhash(k, i, m); 
        if (t[j].k == k) 
            return j; 
        else i++;
        
    }while (t[j].status != 0 && i < m); 
    
    return -1; 
    
} 

// funcao para remocao de chave 
int hash_remove(dado t[], int m, int k) 
{ 
    int j; j = hash_search(t,m,k); 
    
    if(j != -1) 
        { t[j].status = 2; 
        t[j].k = -1; 
        return 0; // consegui remover 
        }else return -1; 
        
        // k nao esta na tabela
        } 

int main() 
{ 
    int i, j; 
    int k2; 
    int m; // tamanho da tabela 
    int r, pos;
    dado t[50]; //struct 
    int op; // opções do switch char texto[50]; 
    char info[50]; 
    int k = 0; 
    
    cin >> m; 
    
    for(i = 0; i < m; i++)
    { 
        t[i].status = 0; 
        
    } 
    
    do
    { 
        cin >> op; 
        
        switch (op)
        { 
            case 1: 
                cin >> t[i].info; 
                
                k = 0; // k = 0 precisa ser feito toda vez que for calcular k, e não apenas no inicio do codigo 
                for (int i = 0; i < strlen(info); i++) 
                    k += (int)info[i]; 
                
                pos = hash_insert(t, m, k); //insere k na tabela e armazena a posicao em que foi inserido 
                strcpy(t[pos].info, info); // insere o texto na tabela, na mesma posicao em que o k foi inserido 
                
                break;
                
            case 2: 
               cin >> t[i].info; 
                
                k = 0;
                for(int i = 0; i <strlen(info); i++)
                    k += (int)info[i];
            
                if(hash_search(t, m, k2) == -1) 
                    cout << info << " não encontrado" << endl; 
                else cout << k2 << " encontrado na posicao " << hash_search(t, m, k2) << endl; 
                
                cout << endl; 
                
                break; 
                
            case 3: 
                cin >> r; 
                
                hash_remove(t, m, r); 
                for(i = 0; i < m; i++) 
                {   
                    t[i].status = 0; 
                    strcpy(t[i].info, "vazio"); //copia o texto "vazio" para a variavel t[i].info
                }
                
                break; 
                
            case 4: 
            
                for(j = 0; j < m; j++) 
                cout << t[j].info << " "; 
                cout << endl; break; 
            
        } 
        
    } while(op != 5); 
    
    return 0; 
    
}
